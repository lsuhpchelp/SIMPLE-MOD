#%Module

# =====================================================================
# Generated by SIMPLE-MOD
# Developer: Jason Li (jasonli3@lsu.edu)
# Description: 
#       1) This module template is compatible with:
#            - Environment Modules >= 4.5.2. 
#               See https://github.com/cea-hpc/modules
#            - Lmod >= 8.7.34. 
#               See https://github.com/TACC/Lmod
#          May not be compatible with different module systems.
#       2) This template generates wrapper scripts in users' 
#          environment, and works with MPI-enabled software packages.
# =====================================================================

# ---------------------------------------------------------------------
# Wrapper scripts path (Customize me)
# ---------------------------------------------------------------------

set WRAPPER_PATH /home/$env(USER)/.local/bin/modules

# ---------------------------------------------------------------------
# Software specific information
# ---------------------------------------------------------------------

# Module information
module-whatis Name: maker
module-whatis Version: 3.01.03
module-whatis Description: MAKER is a portable and easily configurable genome annotation pipeline.

# Singularity options
set SINGULARITY_IMAGE "/project/containers/images/maker-3.01.03.sif"
set SINGULARITY_BINDPATHS "/work,/project,/usr/local/packages,/var/scratch,"
set SINGULARITY_FLAGS " "

# Conflicts
conflict maker 

# List of commands to overwrite
set CMDS {
maker maker2chado maker2eval_gtf maker2jbrowse maker2wap maker2zff maker_functional_fasta maker_functional_gff maker_map_ids
AED_cdf_generator.pl cegma2gff.pl cegma2zff chado2gff3 compare_gff3_to_chado cufflinks2gff3 fasta_merge fasta_tool genemark_gtf2gff3 gff3_merge ipr_update_gff iprscan2gff3  map2assembly map_data_ids map_fasta_ids map_gff_ids match2gene.pl quality_filter.pl split_gff3 tophat2gff3 train_augustus.pl zff2genbank.pl
}

# Set environment varialbles


# ---------------------------------------------------------------------
# Module key setup
# ---------------------------------------------------------------------

# Combine Singularity exec command
set SINGULARITY_EXEC "singularity exec -B $SINGULARITY_BINDPATHS $SINGULARITY_FLAGS --pwd \$PWD $SINGULARITY_IMAGE"

# Set wrapper directory
file mkdir $WRAPPER_PATH/maker/3.01.03
prepend-path PATH $WRAPPER_PATH/maker/3.01.03

# Create wrappers when the module is loaded
if { [ module-info mode load ] } {

    # If it is csh type shell
    if { [module-info shelltype] == "csh" } {
    
        # Create wrappers for each command
        foreach cmd $CMDS {
            puts "echo '#\\!/bin/bash' > $WRAPPER_PATH/maker/3.01.03/$cmd;"
            puts "echo '$SINGULARITY_EXEC $cmd \"$@\"' >> $WRAPPER_PATH/maker/3.01.03/$cmd;"
            puts "chmod u+x $WRAPPER_PATH/maker/3.01.03/$cmd;"
        }
        
        # Refresh cache (only for csh type shell)
        puts "rehash;"
        
    # If it is sh type shell
    } elseif { [module-info shelltype] == "sh" } {
    
        # Create wrappers for each command
        foreach cmd $CMDS {
            puts "echo '#!/bin/bash' > $WRAPPER_PATH/maker/3.01.03/$cmd;"
            puts "echo '$SINGULARITY_EXEC $cmd \"$@\"' >> $WRAPPER_PATH/maker/3.01.03/$cmd;"
            puts "chmod u+x $WRAPPER_PATH/maker/3.01.03/$cmd;"
        }
        
    }
}

# Currently, wrappers will not be deleted to avoid unwanted issues.

# Help information
proc ModulesHelp {} {
    global CMDS
    puts stderr "

\[ Help information \]

1. This module only works on computing nodes (not available on head nodes). Make sure you start a job!

2. Below executables are available:
$CMDS"
}
if { [ module-info mode load ] } {
    ModulesHelp
}
